//
//Written by GowinSynthesis
//Tool Version "V1.9.11 (64-bit)"
//Mon Apr 28 17:26:05 2025

//Source file index table:
//file0 "\C:/Users/xiang/Downloads/BU/RASTIC/WebBlink/FPGA/led_blinker/src/clock_divider.v"
//file1 "\C:/Users/xiang/Downloads/BU/RASTIC/WebBlink/FPGA/led_blinker/src/led_blinker.v"
`timescale 100 ps/100 ps
module clock_divider (
  clk_d,
  divided_clk
)
;
input clk_d;
output divided_clk;
wire n20_4;
wire n20_5;
wire n20_6;
wire n20_7;
wire n20_8;
wire n20_9;
wire n20_10;
wire n20_11;
wire n46_1;
wire n46_2;
wire n45_1;
wire n45_2;
wire n44_1;
wire n44_2;
wire n43_1;
wire n43_2;
wire n42_1;
wire n42_2;
wire n41_1;
wire n41_2;
wire n40_1;
wire n40_2;
wire n39_1;
wire n39_2;
wire n38_1;
wire n38_2;
wire n37_1;
wire n37_2;
wire n36_1;
wire n36_2;
wire n35_1;
wire n35_2;
wire n34_1;
wire n34_2;
wire n33_1;
wire n33_2;
wire n32_1;
wire n32_2;
wire n31_1;
wire n31_2;
wire n30_1;
wire n30_2;
wire n29_1;
wire n29_2;
wire n28_1;
wire n28_2;
wire n27_1;
wire n27_2;
wire n26_1;
wire n26_2;
wire n25_1;
wire n25_2;
wire n24_1;
wire n24_2;
wire n23_1;
wire n23_0_COUT;
wire n73_5;
wire n47_6;
wire [24:0] counter;
wire VCC;
wire GND;
  LUT4 n20_s0 (
    .F(n20_4),
    .I0(n20_5),
    .I1(counter[0]),
    .I2(counter[1]),
    .I3(n20_6) 
);
defparam n20_s0.INIT=16'h8000;
  LUT4 n20_s1 (
    .F(n20_5),
    .I0(n20_7),
    .I1(n20_8),
    .I2(n20_9),
    .I3(n20_10) 
);
defparam n20_s1.INIT=16'h8000;
  LUT4 n20_s2 (
    .F(n20_6),
    .I0(counter[19]),
    .I1(counter[20]),
    .I2(n20_11),
    .I3(counter[18]) 
);
defparam n20_s2.INIT=16'h1000;
  LUT4 n20_s3 (
    .F(n20_7),
    .I0(counter[16]),
    .I1(counter[17]),
    .I2(counter[14]),
    .I3(counter[15]) 
);
defparam n20_s3.INIT=16'h1000;
  LUT4 n20_s4 (
    .F(n20_8),
    .I0(counter[2]),
    .I1(counter[3]),
    .I2(counter[4]),
    .I3(counter[5]) 
);
defparam n20_s4.INIT=16'h8000;
  LUT4 n20_s5 (
    .F(n20_9),
    .I0(counter[10]),
    .I1(counter[11]),
    .I2(counter[12]),
    .I3(counter[13]) 
);
defparam n20_s5.INIT=16'h0100;
  LUT4 n20_s6 (
    .F(n20_10),
    .I0(counter[6]),
    .I1(counter[9]),
    .I2(counter[8]),
    .I3(counter[7]) 
);
defparam n20_s6.INIT=16'h1000;
  LUT4 n20_s7 (
    .F(n20_11),
    .I0(counter[24]),
    .I1(counter[22]),
    .I2(counter[23]),
    .I3(counter[21]) 
);
defparam n20_s7.INIT=16'h4000;
  DFFR counter_23_s0 (
    .Q(counter[23]),
    .D(n24_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_22_s0 (
    .Q(counter[22]),
    .D(n25_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_21_s0 (
    .Q(counter[21]),
    .D(n26_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_20_s0 (
    .Q(counter[20]),
    .D(n27_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_19_s0 (
    .Q(counter[19]),
    .D(n28_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_18_s0 (
    .Q(counter[18]),
    .D(n29_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_17_s0 (
    .Q(counter[17]),
    .D(n30_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_16_s0 (
    .Q(counter[16]),
    .D(n31_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_15_s0 (
    .Q(counter[15]),
    .D(n32_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_14_s0 (
    .Q(counter[14]),
    .D(n33_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_13_s0 (
    .Q(counter[13]),
    .D(n34_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_12_s0 (
    .Q(counter[12]),
    .D(n35_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_11_s0 (
    .Q(counter[11]),
    .D(n36_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_10_s0 (
    .Q(counter[10]),
    .D(n37_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_9_s0 (
    .Q(counter[9]),
    .D(n38_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_8_s0 (
    .Q(counter[8]),
    .D(n39_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_7_s0 (
    .Q(counter[7]),
    .D(n40_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_6_s0 (
    .Q(counter[6]),
    .D(n41_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_5_s0 (
    .Q(counter[5]),
    .D(n42_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_4_s0 (
    .Q(counter[4]),
    .D(n43_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_3_s0 (
    .Q(counter[3]),
    .D(n44_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_2_s0 (
    .Q(counter[2]),
    .D(n45_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_1_s0 (
    .Q(counter[1]),
    .D(n46_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_0_s0 (
    .Q(counter[0]),
    .D(n47_6),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFR counter_24_s0 (
    .Q(counter[24]),
    .D(n23_1),
    .CLK(clk_d),
    .RESET(n20_4) 
);
  DFFE clk_1hz_s1 (
    .Q(divided_clk),
    .D(n73_5),
    .CLK(clk_d),
    .CE(n20_4) 
);
defparam clk_1hz_s1.INIT=1'b0;
  ALU n46_s (
    .SUM(n46_1),
    .COUT(n46_2),
    .I0(counter[1]),
    .I1(counter[0]),
    .I3(GND),
    .CIN(GND) 
);
defparam n46_s.ALU_MODE=0;
  ALU n45_s (
    .SUM(n45_1),
    .COUT(n45_2),
    .I0(counter[2]),
    .I1(GND),
    .I3(GND),
    .CIN(n46_2) 
);
defparam n45_s.ALU_MODE=0;
  ALU n44_s (
    .SUM(n44_1),
    .COUT(n44_2),
    .I0(counter[3]),
    .I1(GND),
    .I3(GND),
    .CIN(n45_2) 
);
defparam n44_s.ALU_MODE=0;
  ALU n43_s (
    .SUM(n43_1),
    .COUT(n43_2),
    .I0(counter[4]),
    .I1(GND),
    .I3(GND),
    .CIN(n44_2) 
);
defparam n43_s.ALU_MODE=0;
  ALU n42_s (
    .SUM(n42_1),
    .COUT(n42_2),
    .I0(counter[5]),
    .I1(GND),
    .I3(GND),
    .CIN(n43_2) 
);
defparam n42_s.ALU_MODE=0;
  ALU n41_s (
    .SUM(n41_1),
    .COUT(n41_2),
    .I0(counter[6]),
    .I1(GND),
    .I3(GND),
    .CIN(n42_2) 
);
defparam n41_s.ALU_MODE=0;
  ALU n40_s (
    .SUM(n40_1),
    .COUT(n40_2),
    .I0(counter[7]),
    .I1(GND),
    .I3(GND),
    .CIN(n41_2) 
);
defparam n40_s.ALU_MODE=0;
  ALU n39_s (
    .SUM(n39_1),
    .COUT(n39_2),
    .I0(counter[8]),
    .I1(GND),
    .I3(GND),
    .CIN(n40_2) 
);
defparam n39_s.ALU_MODE=0;
  ALU n38_s (
    .SUM(n38_1),
    .COUT(n38_2),
    .I0(counter[9]),
    .I1(GND),
    .I3(GND),
    .CIN(n39_2) 
);
defparam n38_s.ALU_MODE=0;
  ALU n37_s (
    .SUM(n37_1),
    .COUT(n37_2),
    .I0(counter[10]),
    .I1(GND),
    .I3(GND),
    .CIN(n38_2) 
);
defparam n37_s.ALU_MODE=0;
  ALU n36_s (
    .SUM(n36_1),
    .COUT(n36_2),
    .I0(counter[11]),
    .I1(GND),
    .I3(GND),
    .CIN(n37_2) 
);
defparam n36_s.ALU_MODE=0;
  ALU n35_s (
    .SUM(n35_1),
    .COUT(n35_2),
    .I0(counter[12]),
    .I1(GND),
    .I3(GND),
    .CIN(n36_2) 
);
defparam n35_s.ALU_MODE=0;
  ALU n34_s (
    .SUM(n34_1),
    .COUT(n34_2),
    .I0(counter[13]),
    .I1(GND),
    .I3(GND),
    .CIN(n35_2) 
);
defparam n34_s.ALU_MODE=0;
  ALU n33_s (
    .SUM(n33_1),
    .COUT(n33_2),
    .I0(counter[14]),
    .I1(GND),
    .I3(GND),
    .CIN(n34_2) 
);
defparam n33_s.ALU_MODE=0;
  ALU n32_s (
    .SUM(n32_1),
    .COUT(n32_2),
    .I0(counter[15]),
    .I1(GND),
    .I3(GND),
    .CIN(n33_2) 
);
defparam n32_s.ALU_MODE=0;
  ALU n31_s (
    .SUM(n31_1),
    .COUT(n31_2),
    .I0(counter[16]),
    .I1(GND),
    .I3(GND),
    .CIN(n32_2) 
);
defparam n31_s.ALU_MODE=0;
  ALU n30_s (
    .SUM(n30_1),
    .COUT(n30_2),
    .I0(counter[17]),
    .I1(GND),
    .I3(GND),
    .CIN(n31_2) 
);
defparam n30_s.ALU_MODE=0;
  ALU n29_s (
    .SUM(n29_1),
    .COUT(n29_2),
    .I0(counter[18]),
    .I1(GND),
    .I3(GND),
    .CIN(n30_2) 
);
defparam n29_s.ALU_MODE=0;
  ALU n28_s (
    .SUM(n28_1),
    .COUT(n28_2),
    .I0(counter[19]),
    .I1(GND),
    .I3(GND),
    .CIN(n29_2) 
);
defparam n28_s.ALU_MODE=0;
  ALU n27_s (
    .SUM(n27_1),
    .COUT(n27_2),
    .I0(counter[20]),
    .I1(GND),
    .I3(GND),
    .CIN(n28_2) 
);
defparam n27_s.ALU_MODE=0;
  ALU n26_s (
    .SUM(n26_1),
    .COUT(n26_2),
    .I0(counter[21]),
    .I1(GND),
    .I3(GND),
    .CIN(n27_2) 
);
defparam n26_s.ALU_MODE=0;
  ALU n25_s (
    .SUM(n25_1),
    .COUT(n25_2),
    .I0(counter[22]),
    .I1(GND),
    .I3(GND),
    .CIN(n26_2) 
);
defparam n25_s.ALU_MODE=0;
  ALU n24_s (
    .SUM(n24_1),
    .COUT(n24_2),
    .I0(counter[23]),
    .I1(GND),
    .I3(GND),
    .CIN(n25_2) 
);
defparam n24_s.ALU_MODE=0;
  ALU n23_s (
    .SUM(n23_1),
    .COUT(n23_0_COUT),
    .I0(counter[24]),
    .I1(GND),
    .I3(GND),
    .CIN(n24_2) 
);
defparam n23_s.ALU_MODE=0;
  INV n73_s2 (
    .O(n73_5),
    .I(divided_clk) 
);
  INV n47_s2 (
    .O(n47_6),
    .I(counter[0]) 
);
  VCC VCC_cZ (
    .V(VCC)
);
  GND GND_cZ (
    .G(GND)
);
endmodule /* clock_divider */
module led_blinker (
  clk,
  reset,
  led
)
;
input clk;
input reset;
output led;
wire clk_d;
wire reset_d;
wire led_d;
wire divided_clk;
wire VCC;
wire GND;
  IBUF clk_ibuf (
    .O(clk_d),
    .I(clk) 
);
  IBUF reset_ibuf (
    .O(reset_d),
    .I(reset) 
);
  OBUF led_obuf (
    .O(led),
    .I(led_d) 
);
  DFFR led_s3 (
    .Q(led_d),
    .D(reset_d),
    .CLK(divided_clk),
    .RESET(led_d) 
);
  clock_divider i4 (
    .clk_d(clk_d),
    .divided_clk(divided_clk)
);
  VCC VCC_cZ (
    .V(VCC)
);
  GND GND_cZ (
    .G(GND)
);
  GSR GSR (
    .GSRI(VCC) 
);
endmodule /* led_blinker */
